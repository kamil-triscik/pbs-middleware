## GENERAL SPRING CONFIGURATION
spring.application.name=${middleware.server.application.name}
server.port=${middleware.server.application.port}

##FLYWAY
spring.flyway.placeholders.owner=${middleware.server.db.psql.username}

## POSTGRES
spring.datasource.url=${middleware.server.db.psql.url}
spring.datasource.driver-class-name=${middleware.server.db.psql.driver-class-name}
spring.datasource.username=${middleware.server.db.psql.username}
spring.datasource.password=${middleware.server.db.psql.password}
spring.jpa.database-platform=${middleware.server.db.psql.platform:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.jdbc.time_zone = UTC
javax.persistence.validation.mode=NONE
spring.jpa.properties.javax.persistence.validation.mode=NONE

## MONGO
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.repositories.type=auto
spring.data.mongodb.database=${middleware.server.db.mongo.name}
spring.data.mongodb.host=${middleware.server.db.mongo.host}
spring.data.mongodb.port=${middleware.server.db.mongo.port}
spring.data.mongodb.username=${middleware.server.db.mongo.user}
spring.data.mongodb.password=${middleware.server.db.mongo.password}

## LOGGING
logging.level.web=${middleware.server.logging.level}

spring.security.strategy=MODE_INHERITABLETHREADLOCAL

## JSON
spring.jackson.deserialization.fail-on-unknown-properties=true

## UPLOAD AND DOWNLOAD
spring.servlet.multipart.max-file-size=${middleware.server.features.transfer.maxfilesize:100MB}
spring.servlet.multipart.max-request-size=${middleware.server.features.transfer.maxrequestsize:500MB}
spring.servlet.multipart.enabled=true
## EMAIL
spring.mail.host=${middleware.server.mail.host:}
spring.mail.port=${middleware.server.mail.port:}
spring.mail.username=${middleware.server.mail.username:}
spring.mail.password=${middleware.server.mail.password:}
spring.mail.from=${middleware.server.mail.from:}
spring.mail.default-encoding=UTF-8
spring.mail.test-connection=false
spring.mail.properties.mail.smtp.auth=${middleware.server.mail.properties.mail.smtp.auth:true}
spring.mail.properties.mail.smtp.starttls.enable=${middleware.server.mail.properties.mail.smtp.starttls.enable:true}
spring.mail.properties.mail.smtp.connectiontimeout=${middleware.server.mail.properties.mail.smtp.connectiontimeout:5000}
spring.mail.properties.mail.smtp.timeout=${middleware.server.mail.properties.mail.smtp.timeout:5000}
spring.mail.properties.mail.smtp.writetimeout=${middleware.server.mail.properties.mail.smtp.writetimeout:5000}

# Freemarker
spring.freemarker.template-loader-path=classpath:/templates
spring.freemarker.suffix=.ftl
spring.freemarker.checkTemplateLocation=false

### ACTUATOR CONFIG
management.endpoints.web.exposure.include=info,health,env,metrics, prometheus

# Health
management.endpoint.health.cache.time-to-live=1000ms
management.endpoint.health.enabled=true
management.endpoint.health.roles=ADMIN
management.endpoint.health.show-details=ALWAYS
#management.endpoint.health.show-details=WHEN_AUTHORIZED
management.health.db.enabled=true
management.health.defaults.enabled=true
management.health.diskspace.enabled=true
#management.health.diskspace.path=
management.health.diskspace.threshold=10MB
management.health.mail.enabled=false

# Info
management.endpoint.info.enabled=true
info.app.name=${middleware.server.application.name}
info.app.description=${middleware.server.application.description}
info.app.version=1.0.0
info.java-vendor = ${java.specification.vendor}
spring.info.git.encoding=UTF-8
spring.info.git.location=classpath:git.properties
management.info.build.enabled=true
management.info.defaults.enabled=true
management.info.env.enabled=true
management.info.git.enabled=true
management.info.git.mode=FULL

# Other
management.endpoint.env.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

server.ssl.enabled=${middleware.server.ssl.enabled:true}
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=${middleware.server.ssl.keystoretype}
# The path to the keystore containing the certificate
server.ssl.key-store=${middleware.server.ssl.keystore}
# The password used to generate the certificate
server.ssl.key-store-password=${middleware.server.ssl.keystorepassword}
# The alias mapped to the certificate
server.ssl.key-alias=${middleware.server.ssl.keyalias}

#trust store location
trust.store=${middleware.server.trust.store}
#trust store password
trust.store.password=${middleware.server.trust.store.password}
server.tomcat.mbeanregistry.enabled=true